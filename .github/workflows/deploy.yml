name: Deploy

on:
  pull_request:
    types: [opened, synchronize, closed]
    branches:
      - develop

  workflow_dispatch:
    inputs:
      action:
        description: 'Deployment action'
        required: false

concurrency:
  group: ${{ github.ref }}

env:
  BRANCH: ${{ github.head_ref || github.ref }}
  #IS_FEATURE: ${{ startsWith(github.head_ref, 'feature/') && !(contains(github.head_ref, 'tests')) && !(contains(github.head_ref, 'subtask')) }}

jobs:
  setup:
    runs-on: ubuntu-latest

    outputs:
      action: ${{ steps.setup.outputs.action }}
      environment: ${{ steps.setup.outputs.environment }}

    steps:
      - id: setup
        name: Setup variables
        shell: pwsh
        run: |
          $regexResult = [Regex]::Match($env:BRANCH, "feature/(\w+)")
          
          if ($regexResult.Success) {
            $environment = $regexResult.Groups[1].Value.ToLower().Replace('-', '')
            $action = $INPUT_ACTION ?? $GITHUB_ACTION ?? 'deploy'

            Write-Output "BRANCH: $BRANCH, INPUT_ACTION $INPUT_ACTION, GITHUB_ACTION: $GITHUB_ACTION"

            echo "::set-output name=environment::$environment"
            echo "::set-output name=action::$action"
          }

  deploy:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.action == 'deploy'
    
    steps:
      - uses: actions/checkout@v2

      - name: Start deploy
        shell: bash
        run: |
          echo Starting deployment
          printf "%q" "${{ toJSON(github) }}"

      - name: Deploy...
        shell: bash
        run: sleep 5s

      - name: Deploy finished
        run: echo Deploying in response to ${{ github.event_name }} action ${{ github.event.action }}. IsFeature = ${{ env.IS_FEATURE }}...

  destroy:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.action == 'destroy'

    steps:
      - uses: actions/checkout@v2

      - name: Start destroy
        shell: bash
        run: sleep 5s

      - name: Destroy finished
        run: echo Destroying in response to ${{ github.event_name }} action ${{ github.event.action }}...